{
  "version": 3,
  "sources": ["../../../src/openapi.ts"],
  "sourcesContent": ["import * as fs from 'fs';\r\nimport * as path from 'path';\r\n\r\ninterface Event {\r\n  headers: Record<string, string>;\r\n}\r\n\r\ninterface MetaData {\r\n  [key: string]: {\r\n    serviceProviderAwsCfStackOutputs: Array<{ OutputKey: string, OutputValue: string }>;\r\n  };\r\n}\r\n\r\nexport const openapi = async (event: Event): Promise<any> => {\r\n  try {\r\n    const filePath = path.join(__dirname, '../openapi.yml'); // Aseg\u00FArate de que la ruta sea correcta\r\n    let data = fs.readFileSync(filePath, 'utf8');\r\n    \r\n    const protocol = event.headers['X-Forwarded-Proto'] || 'http';\r\n    const apiGatewayUrl = `${protocol}://${event.headers['Host']}`;\r\n    data = data.replace('URL_APIGATEGAY', apiGatewayUrl);\r\n\r\n    const metaPath = path.join(__dirname, '../.serverless/meta.json');\r\n    let metaData = fs.readFileSync(metaPath, 'utf8');\r\n    let parsedMetaData: MetaData = JSON.parse(metaData);\r\n    \r\n    const firstKey = Object.keys(parsedMetaData)[0];\r\n   \r\n    const outputs = parsedMetaData[firstKey].serviceProviderAwsCfStackOutputs.find(event => event.OutputKey === \"HttpApiUrl\");\r\n\r\n    if (!(event.headers['Host'].includes('localhost'))) {\r\n      if (outputs) {\r\n        data = data.replace('URL_APIGATEGAY', outputs?.OutputValue);\r\n      }\r\n    }\r\n\r\n    return {\r\n      statusCode: 200,\r\n      headers: {\r\n        'Content-Type': 'application/x-yaml',\r\n        'Access-Control-Allow-Origin': '*', // Permitir todos los or\u00EDgenes\r\n      },\r\n      body: data,\r\n    };\r\n  } catch (error) {\r\n    console.error('Error loading openapi.yml:', error);\r\n    return {\r\n      statusCode: 500,\r\n      body: JSON.stringify({ message: 'Internal Server Error' }),\r\n    };\r\n  }\r\n};\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoB;AACpB,WAAsB;AAYf,IAAM,UAAU,OAAO,UAA+B;AAC3D,MAAI;AACF,UAAM,WAAgB,UAAK,WAAW,gBAAgB;AACtD,QAAI,OAAU,gBAAa,UAAU,MAAM;AAE3C,UAAM,WAAW,MAAM,QAAQ,mBAAmB,KAAK;AACvD,UAAM,gBAAgB,GAAG,QAAQ,MAAM,MAAM,QAAQ,MAAM,CAAC;AAC5D,WAAO,KAAK,QAAQ,kBAAkB,aAAa;AAEnD,UAAM,WAAgB,UAAK,WAAW,0BAA0B;AAChE,QAAI,WAAc,gBAAa,UAAU,MAAM;AAC/C,QAAI,iBAA2B,KAAK,MAAM,QAAQ;AAElD,UAAM,WAAW,OAAO,KAAK,cAAc,EAAE,CAAC;AAE9C,UAAM,UAAU,eAAe,QAAQ,EAAE,iCAAiC,KAAK,CAAAA,WAASA,OAAM,cAAc,YAAY;AAExH,QAAI,CAAE,MAAM,QAAQ,MAAM,EAAE,SAAS,WAAW,GAAI;AAClD,UAAI,SAAS;AACX,eAAO,KAAK,QAAQ,kBAAkB,SAAS,WAAW;AAAA,MAC5D;AAAA,IACF;AAEA,WAAO;AAAA,MACL,YAAY;AAAA,MACZ,SAAS;AAAA,QACP,gBAAgB;AAAA,QAChB,+BAA+B;AAAA;AAAA,MACjC;AAAA,MACA,MAAM;AAAA,IACR;AAAA,EACF,SAAS,OAAO;AACd,YAAQ,MAAM,8BAA8B,KAAK;AACjD,WAAO;AAAA,MACL,YAAY;AAAA,MACZ,MAAM,KAAK,UAAU,EAAE,SAAS,wBAAwB,CAAC;AAAA,IAC3D;AAAA,EACF;AACF;",
  "names": ["event"]
}
